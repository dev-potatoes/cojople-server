server:
  port: 8081

spring:
  security:
    oauth2:
      client:

        registration:

          google:
            client-id: 446101020262-1i0bbmetf6ug3seb6krubsa85po28hp5.apps.googleusercontent.com
            client-secret: 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
            scope: openid,profile,email

          naver:
            client-id: H4YAqHYYPQXs6_d3QVRI
            client-secret: KxoAC6XyHD
            authorization-grant-type: authorization_code
            client-name: cojople
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope: profile,email

          keycloak:
            clientId: oauth2-client-app
            clientSecret: AbiFqNHhoWILjexz74QPZfumFgTYGhNF
            clientName: oauth2-client-app
            redirectUri: http://localhost:8081/login/oauth2/code/keycloak
            authorizationGrantType: authorization_code
            clientAuthenticationMethod: client_secret_basic
            scope: openid,profile,email


        provider:

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          keycloak:
            authorizationUri: http://0.0.0.0:8080/realms/oauth2/protocol/openid-connect/auth
            tokenUri: http://0.0.0.0:8080/realms/oauth2/protocol/openid-connect/token
            issuerUri: http://0.0.0.0:8080/realms/oauth2
            userInfoUri: http://0.0.0.0:8080/realms/oauth2/protocol/openid-connect/userinfo
            jwkSetUri: http://0.0.0.0:8080/realms/oauth2/protocol/openid-connect/certs
            userNameAttribute: preferred_username

  mvc:
    static-path-pattern: /static/**




  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/mojolll?serverTimezone=UTC&characterEncoding=UTF-8
    username: root
    password: hwryu990927!

#  autoconfigure:
#    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
#  security:
#    user:
#      name: user
#      password: 1234

  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    open-in-view: false
    show-sql: true
    hibernate:
      format_sql: true
      ddl-auto: create
    defer-datasource-initialization: true


  redis:
    pool:
      min-idle: 0
      max-idle: 8
      max-active: 8
    port: 6379
    host: 127.0.0.1

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
